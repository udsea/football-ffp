AWSTemplateFormatVersion: '2010-09-09'
Description: 'Football FFP Analysis Infrastructure - S3, OpenSearch, and IAM roles'

Parameters:
  ProjectName:
    Type: String
    Default: football-ffp
    Description: Name of the project for resource naming

Resources:
  # S3 Bucket for storing scraped data
  FFPDataBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '${ProjectName}-data-${AWS::AccountId}'
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Function: !GetAtt ProcessDataFunction.Arn

  # OpenSearch Domain for vector storage
  OpenSearchDomain:
    Type: AWS::OpenSearch::Domain
    Properties:
      DomainName: !Sub '${ProjectName}-vectors'
      EngineVersion: 'OpenSearch_2.3'
      ClusterConfig:
        InstanceType: t3.small.search
        InstanceCount: 1
        DedicatedMasterEnabled: false
      EBSOptions:
        EBSEnabled: true
        VolumeType: gp3
        VolumeSize: 20
      AccessPolicies:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              AWS: !Sub 'arn:aws:iam::${AWS::AccountId}:root'
            Action: 'es:*'
            Resource: !Sub 'arn:aws:es:${AWS::Region}:${AWS::AccountId}:domain/${ProjectName}-vectors/*'

  # Lambda function for processing data
  ProcessDataFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-process-data'
      Runtime: nodejs18.x
      Handler: index.handler
      Role: !GetAtt LambdaExecutionRole.Arn
      Code:
        ZipFile: |
          exports.handler = async (event) => {
            console.log('Processing S3 event:', JSON.stringify(event, null, 2));
            return { statusCode: 200, body: 'Data processed' };
          };
      Environment:
        Variables:
          OPENSEARCH_ENDPOINT: !GetAtt OpenSearchDomain.DomainEndpoint
          S3_BUCKET: !Ref FFPDataBucket

  # Lambda permission for S3 to invoke
  S3InvokeLambdaPermission:
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !Ref ProcessDataFunction
      Action: lambda:InvokeFunction
      Principal: s3.amazonaws.com
      SourceArn: !Sub '${FFPDataBucket}/*'

  # IAM Role for Lambda
  LambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-lambda-role'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: FFPAnalysisPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                Resource: !Sub '${FFPDataBucket}/*'
              - Effect: Allow
                Action:
                  - es:ESHttpPost
                  - es:ESHttpPut
                  - es:ESHttpGet
                Resource: !GetAtt OpenSearchDomain.Arn
              - Effect: Allow
                Action:
                  - bedrock:InvokeModel
                Resource: '*'

  # QuickSight Data Source
  QuickSightDataSource:
    Type: AWS::QuickSight::DataSource
    Properties:
      AwsAccountId: !Ref AWS::AccountId
      DataSourceId: !Sub '${ProjectName}-datasource'
      Name: !Sub '${ProjectName} FFP Data'
      Type: S3
      DataSourceParameters:
        S3Parameters:
          ManifestFileLocation:
            Bucket: !Ref FFPDataBucket
            Key: 'manifest.json'

Outputs:
  S3BucketName:
    Description: 'S3 Bucket for FFP data'
    Value: !Ref FFPDataBucket
    Export:
      Name: !Sub '${ProjectName}-s3-bucket'

  OpenSearchEndpoint:
    Description: 'OpenSearch domain endpoint'
    Value: !GetAtt OpenSearchDomain.DomainEndpoint
    Export:
      Name: !Sub '${ProjectName}-opensearch-endpoint'

  LambdaFunctionArn:
    Description: 'Lambda function ARN'
    Value: !GetAtt ProcessDataFunction.Arn
    Export:
      Name: !Sub '${ProjectName}-lambda-arn'